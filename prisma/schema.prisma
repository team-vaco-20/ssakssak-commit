generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model report_groups {
  report_group_id   String   @id @db.Uuid
  user_id           String?  @db.Uuid
  report_group_name String   @unique
  is_active         Boolean  @default(true)
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  updated_at        DateTime @default(now()) @db.Timestamptz(6)
  users             users?   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_report_groups_user_id")
}

model report_templates {
  report_template_id    String   @id @db.Uuid
  user_id               String?  @db.Uuid
  report_template_title String   @unique
  analysis_guide        String?
  is_active             Boolean  @default(true)
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @default(now()) @db.Timestamptz(6)
  users                 users?   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_report_templates_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model repositories {
  repository_id        String   @id @db.Uuid
  user_id              String   @db.Uuid
  repository_name      String
  repository_owner     String
  repository_url       String
  visibility           String
  encrypted_credential Bytes?
  connected_status     String   @default("connected")
  is_active            Boolean  @default(true)
  created_at           DateTime @default(now()) @db.Timestamptz(6)
  updated_at           DateTime @default(now()) @db.Timestamptz(6)
  users                users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_repositories_user_id")
}

model users {
  user_id          String             @id @db.Uuid
  github_id        BigInt             @unique
  user_email       String             @unique
  user_name        String
  avatar_url       String?
  is_active        Boolean            @default(true)
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  updated_at       DateTime           @default(now()) @db.Timestamptz(6)
  report_groups    report_groups[]
  report_templates report_templates[]
  repositories     repositories[]
}
