[
  {
    "sha": "da5b7c9a808b1d8843ae7dbf4dd19a568e02b799",
    "author": "codewith-MJ",
    "date": "2025-08-29T06:55:00Z",
    "message": "✨feat: branch 목록 조회 에러핸들링 로직, 에러 클래스 및 상수 추가",
    "files": [
      {
        "filename": "src/app/api/branch/route.ts",
        "status": "removed",
        "patch": "@@ -1,22 +0,0 @@\n-import { getRepositoryBranchNames } from \"@/services/branch/branch\";\n-import { NextRequest, NextResponse } from \"next/server\";\n-\n-const handleGetBranchNames = async function GET(request: NextRequest) {\n-  const repositoryUrl = request.nextUrl.searchParams.get(\"repositoryUrl\");\n-\n-  if (repositoryUrl === null) {\n-    return;\n-  }\n-\n-  try {\n-    const branches = await getRepositoryBranchNames(repositoryUrl);\n-\n-    return NextResponse.json({ branches });\n-  } catch (error) {\n-    const message = error instanceof Error ? error.message : \"Unexpected error\";\n-\n-    return new Response(message, { status: 500 });\n-  }\n-};\n-\n-export { handleGetBranchNames as GET };"
      },
      {
        "filename": "src/app/api/branches/route.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,31 @@\n+import { getRepositoryBranches } from \"@/services/branch/branch\";\n+import { NextRequest, NextResponse } from \"next/server\";\n+import { validateRepositoryUrl } from \"@/lib/validators/repository-url\";\n+import AppError from \"@/errors/app-error\";\n+import { BranchName } from \"@/app/types/branch\";\n+\n+const handleGetBranches = async function GET(\n+  request: NextRequest,\n+): Promise<NextResponse> {\n+  try {\n+    const repositoryUrl: string = validateRepositoryUrl(\n+      request.nextUrl.searchParams,\n+    );\n+    const branches: BranchName[] = await getRepositoryBranches(repositoryUrl);\n+\n+    return NextResponse.json({ branches });\n+  } catch (error) {\n+    const message: string =\n+      error instanceof Error ? error.message : \"Unexpected error\";\n+    const status: number = error instanceof AppError ? error.status : 500;\n+\n+    return NextResponse.json(\n+      {\n+        error: { message, status },\n+      },\n+      { status },\n+    );\n+  }\n+};\n+\n+export { handleGetBranches as GET };"
      },
      {
        "filename": "src/app/types/branch.ts",
        "status": "modified",
        "patch": "@@ -1 +1,3 @@\n-export type BranchName = string;\n+type BranchName = string;\n+\n+export type { BranchName };"
      },
      {
        "filename": "src/app/types/error-args.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+type ErrorArgs = {\n+  status: number;\n+  message: string;\n+};\n+\n+export type { ErrorArgs };"
      },
      {
        "filename": "src/constants/error-messages.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+const VALIDATION_ERROR_MESSAGES = {\n+  UNRECOGNIZED_KEYS: \"허용되지 않은 파라미터가 포함되어 있습니다.\",\n+};\n+\n+const GITHUB_REPOSITORY_ERROR_MESSAGES = {\n+  INVALID_URL:\n+    \"유효한 GitHub 저장소 URL을 입력해주세요. (예: https://github.com/owner/repository.git)\",\n+  NOT_FOUND: \"존재하지 않거나 접근할 수 없는 Repository입니다.\",\n+  INVALID_REPO_PATH:\n+    \"레포지토리 URL은 반드시 'github.com/owner/repo' 형태여야 합니다.\",\n+};\n+\n+export { VALIDATION_ERROR_MESSAGES, GITHUB_REPOSITORY_ERROR_MESSAGES };"
      },
      {
        "filename": "src/constants/github-api.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+const GITHUB_API = {\n+  HEADERS: {\n+    X_GITHUB_API_VERSION: \"X-Github-Api-Version\",\n+    VERSION: \"2022-11-28\",\n+  },\n+  ENDPOINTS: {\n+    BRANCH: {\n+      LIST: \"GET /repos/{owner}/{repo}/branches\",\n+    },\n+  },\n+};\n+\n+export { GITHUB_API };"
      },
      {
        "filename": "src/constants/validations.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,8 @@\n+const GITHUB_REPOSITORY_RULES = {\n+  URL_SEGMENT_COUNT: 2,\n+  URL_PREFIX: \"https://github.com/\",\n+  HOSTNAME_REGEX: /^github\\.com$/,\n+  SUFFIX_REGEX: /\\.git$/,\n+};\n+\n+export { GITHUB_REPOSITORY_RULES };"
      },
      {
        "filename": "src/errors/app-error.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+import { ErrorArgs } from \"@/app/types/error-args\";\n+\n+class AppError extends Error {\n+  status: number;\n+\n+  constructor({ status, message }: ErrorArgs) {\n+    super(message);\n+    this.status = status;\n+  }\n+}\n+\n+export default AppError;"
      },
      {
        "filename": "src/errors/bad-request-error.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+import AppError from \"./app-error\";\n+import { ErrorArgs } from \"@/app/types/error-args\";\n+\n+class BadRequestError extends AppError {\n+  constructor(args: Omit<ErrorArgs, \"status\">) {\n+    super({\n+      status: 400,\n+      ...args,\n+    });\n+  }\n+}\n+\n+export default BadRequestError;"
      },
      {
        "filename": "src/errors/not-found-error.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,13 @@\n+import AppError from \"./app-error\";\n+import { ErrorArgs } from \"@/app/types/error-args\";\n+\n+class NotFoundError extends AppError {\n+  constructor(args: Omit<ErrorArgs, \"status\">) {\n+    super({\n+      status: 404,\n+      ...args,\n+    });\n+  }\n+}\n+\n+export default NotFoundError;"
      },
      {
        "filename": "src/infra/github-api/github.ts",
        "status": "modified",
        "patch": "@@ -1,19 +1,41 @@\n-import { Octokit } from \"octokit\";\n+import { Octokit, RequestError } from \"octokit\";\n import { BranchName } from \"@/app/types/branch\";\n+import NotFoundError from \"@/errors/not-found-error\";\n+import { GITHUB_REPOSITORY_ERROR_MESSAGES } from \"@/constants/error-messages\";\n+import { GITHUB_API } from \"@/constants/github-api\";\n \n-const getBranchNames = async (owner: string, repositoryName: string) => {\n+const { HEADERS, ENDPOINTS } = GITHUB_API;\n+const { X_GITHUB_API_VERSION, VERSION } = HEADERS;\n+\n+const getBranches = async (\n+  owner: string,\n+  repositoryName: string,\n+): Promise<BranchName[]> => {\n   const octokit = new Octokit();\n-  const response = await octokit.request(\"GET /repos/{owner}/{repo}/branches\", {\n-    owner: owner,\n-    repo: repositoryName,\n-    headers: {\n-      \"X-Github-Api-Version\": \"2022-11-28\",\n-    },\n-  });\n+  try {\n+    const response = await octokit.request(ENDPOINTS.BRANCH.LIST, {\n+      owner: owner,\n+      repo: repositoryName,\n+      headers: {\n+        [X_GITHUB_API_VERSION]: VERSION,\n+      },\n+    });\n \n-  const branchNames: BranchName[] = response.data.map((branch) => branch.name);\n+    const branches: BranchName[] = response.data.map(\n+      (branch: { name: string }) => branch.name,\n+    );\n \n-  return branchNames;\n+    return branches;\n+  } catch (error) {\n+    if (error instanceof RequestError) {\n+      if (error.status === 404) {\n+        throw new NotFoundError({\n+          message: GITHUB_REPOSITORY_ERROR_MESSAGES.NOT_FOUND,\n+        });\n+      }\n+    }\n+    throw error;\n+  }\n };\n \n-export { getBranchNames };\n+export { getBranches };"
      },
      {
        "filename": "src/lib/parse-repository-url.ts",
        "status": "modified",
        "patch": "@@ -1,9 +1,13 @@\n+import { GITHUB_REPOSITORY_RULES } from \"@/constants/validations\";\n+\n+const { URL_PREFIX, SUFFIX_REGEX } = GITHUB_REPOSITORY_RULES;\n+\n const parseRepositoryUrl = (\n   repositoryUrl: string,\n ): { owner: string; repositoryName: string } => {\n   const [owner, repositoryName] = repositoryUrl\n-    .replace(\"https://github.com/\", \"\")\n-    .replace(\".git\", \"\")\n+    .replace(URL_PREFIX, \"\")\n+    .replace(SUFFIX_REGEX, \"\")\n     .split(\"/\");\n \n   return {"
      },
      {
        "filename": "src/lib/validators/generate-error-message.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+import { z } from \"zod\";\n+import { VALIDATION_ERROR_MESSAGES } from \"@/constants/error-messages\";\n+\n+const generateErrorMessage = (error: z.ZodError) => {\n+  const issue = error.issues[0];\n+  let message = issue.message;\n+\n+  if (issue.code === \"unrecognized_keys\") {\n+    message = `${VALIDATION_ERROR_MESSAGES.UNRECOGNIZED_KEYS} : ${issue.keys}`;\n+  }\n+\n+  return message;\n+};\n+\n+export default generateErrorMessage;"
      },
      {
        "filename": "src/lib/validators/repository-url.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,50 @@\n+import { z } from \"zod\";\n+import BadRequestError from \"@/errors/bad-request-error\";\n+import { GITHUB_REPOSITORY_ERROR_MESSAGES } from \"@/constants/error-messages\";\n+import { GITHUB_REPOSITORY_RULES } from \"@/constants/validations\";\n+import generateErrorMessage from \"./generate-error-message\";\n+\n+const { INVALID_URL, INVALID_REPO_PATH } = GITHUB_REPOSITORY_ERROR_MESSAGES;\n+\n+const { URL_SEGMENT_COUNT, HOSTNAME_REGEX, URL_PREFIX, SUFFIX_REGEX } =\n+  GITHUB_REPOSITORY_RULES;\n+\n+const repositoryUrlSchema = z.strictObject({\n+  repositoryUrl: z\n+    .url({\n+      hostname: HOSTNAME_REGEX,\n+      error: INVALID_URL,\n+    })\n+    .refine(\n+      (value) => {\n+        const repositoryUrlSegmentCount: number = value\n+          .replace(URL_PREFIX, \"\")\n+          .replace(SUFFIX_REGEX, \"\")\n+          .split(\"/\").length;\n+        return repositoryUrlSegmentCount === URL_SEGMENT_COUNT;\n+      },\n+      {\n+        error: INVALID_REPO_PATH,\n+      },\n+    ),\n+});\n+\n+const validateRepositoryUrl = (searchParams: URLSearchParams): string => {\n+  try {\n+    const validatedRepositoryUrl = repositoryUrlSchema.parse(\n+      Object.fromEntries(searchParams),\n+    ).repositoryUrl;\n+    return validatedRepositoryUrl;\n+  } catch (error) {\n+    if (error instanceof z.ZodError) {\n+      const message: string = generateErrorMessage(error);\n+\n+      throw new BadRequestError({\n+        message: message,\n+      });\n+    }\n+    throw error;\n+  }\n+};\n+\n+export { validateRepositoryUrl };"
      },
      {
        "filename": "src/services/branch/branch.ts",
        "status": "modified",
        "patch": "@@ -1,11 +1,14 @@\n-import { getBranchNames } from \"@/infra/github-api/github\";\n+import { BranchName } from \"@/app/types/branch\";\n+import { getBranches } from \"@/infra/github-api/github\";\n import parseRepositoryUrl from \"@/lib/parse-repository-url\";\n \n-const getRepositoryBranchNames = async (repositoryUrl: string) => {\n+const getRepositoryBranches = async (\n+  repositoryUrl: string,\n+): Promise<BranchName[]> => {\n   const { owner, repositoryName } = parseRepositoryUrl(repositoryUrl);\n-  const branchNames = await getBranchNames(owner, repositoryName);\n+  const branches: BranchName[] = await getBranches(owner, repositoryName);\n \n-  return branchNames;\n+  return branches;\n };\n \n-export { getRepositoryBranchNames };\n+export { getRepositoryBranches };"
      }
    ]
  },
  {
    "sha": "5cd887308867379c778c4ff35f57f112c789e84c",
    "author": "524hhhhhh",
    "date": "2025-08-28T01:33:25Z",
    "message": "Feat: 보일러 플레이팅 (#5)\n\n* ✨feat: Next.js 세팅\n\n* ✨feat: Eslint, Prettier 및 Husky 세팅\n\n* ✨feat: Zustand 세팅\n\n* ✨feat: shadcn/ui 공통 컴포넌트 세팅\n\n* ✨feat: Pino 세팅",
    "files": [
      {
        "filename": ".husky/pre-commit",
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+#!/usr/bin/env sh\n+\n+npx --no-install lint-staged"
      },
      {
        "filename": "components.json",
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+{\n+  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n+  \"style\": \"new-york\",\n+  \"rsc\": true,\n+  \"tsx\": true,\n+  \"tailwind\": {\n+    \"config\": \"\",\n+    \"css\": \"src/app/globals.css\",\n+    \"baseColor\": \"neutral\",\n+    \"cssVariables\": true,\n+    \"prefix\": \"\"\n+  },\n+  \"iconLibrary\": \"lucide\",\n+  \"aliases\": {\n+    \"components\": \"@/app\",\n+    \"utils\": \"@/lib/utils\",\n+    \"ui\": \"@/app/ui/common\",\n+    \"lib\": \"@/lib\",\n+    \"hooks\": \"@/hooks\"\n+  }\n+}"
      },
      {
        "filename": "eslint.config.mjs",
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+import { dirname } from \"path\";\n+import { fileURLToPath } from \"url\";\n+import { FlatCompat } from \"@eslint/eslintrc\";\n+\n+const __filename = fileURLToPath(import.meta.url);\n+const __dirname = dirname(__filename);\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+});\n+\n+const eslintConfig = [\n+  ...compat.extends(\"next/core-web-vitals\", \"next/typescript\"),\n+  ...compat.extends(\"prettier\"),\n+  {\n+    files: [\"**/*.{js, jsx, ts, tsx}\"],\n+    ignores: [\n+      \"node_modules/**\",\n+      \".next/**\",\n+      \"out/**\",\n+      \"build/**\",\n+      \"next-env.d.ts\",\n+    ],\n+  },\n+];\n+\n+export default eslintConfig;"
      },
      {
        "filename": "next.config.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,7 @@\n+import type { NextConfig } from \"next\";\n+\n+const nextConfig: NextConfig = {\n+  /* config options here */\n+};\n+\n+export default nextConfig;"
      },
      {
        "filename": "postcss.config.mjs",
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+const config = {\n+  plugins: [\"@tailwindcss/postcss\"],\n+};\n+\n+export default config;"
      },
      {
        "filename": "prettier.config.cjs",
        "status": "added",
        "patch": "@@ -0,0 +1,24 @@\n+module.exports = {\n+  arrowParens: \"always\",\n+  bracketSameLine: false,\n+  objectWrap: \"preserve\",\n+  bracketSpacing: true,\n+  semi: true,\n+  experimentalOperatorPosition: \"end\",\n+  experimentalTernaries: false,\n+  singleQuote: false,\n+  jsxSingleQuote: false,\n+  quoteProps: \"as-needed\",\n+  trailingComma: \"all\",\n+  singleAttributePerLine: false,\n+  htmlWhitespaceSensitivity: \"css\",\n+  vueIndentScriptAndStyle: false,\n+  proseWrap: \"preserve\",\n+  insertPragma: false,\n+  requirePragma: false,\n+  tabWidth: 2,\n+  useTabs: false,\n+  embeddedLanguageFormatting: \"auto\",\n+  printWidth: 80,\n+  plugins: [\"prettier-plugin-tailwindcss\"],\n+};"
      },
      {
        "filename": "src/app/favicon.ico",
        "status": "added",
        "patch": null
      },
      {
        "filename": "src/app/globals.css",
        "status": "added",
        "patch": "@@ -0,0 +1,122 @@\n+@import \"tailwindcss\";\n+@import \"tw-animate-css\";\n+\n+@custom-variant dark (&:is(.dark *));\n+\n+@theme inline {\n+  --color-background: var(--background);\n+  --color-foreground: var(--foreground);\n+  --font-sans: var(--font-geist-sans);\n+  --font-mono: var(--font-geist-mono);\n+  --color-sidebar-ring: var(--sidebar-ring);\n+  --color-sidebar-border: var(--sidebar-border);\n+  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\n+  --color-sidebar-accent: var(--sidebar-accent);\n+  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\n+  --color-sidebar-primary: var(--sidebar-primary);\n+  --color-sidebar-foreground: var(--sidebar-foreground);\n+  --color-sidebar: var(--sidebar);\n+  --color-chart-5: var(--chart-5);\n+  --color-chart-4: var(--chart-4);\n+  --color-chart-3: var(--chart-3);\n+  --color-chart-2: var(--chart-2);\n+  --color-chart-1: var(--chart-1);\n+  --color-ring: var(--ring);\n+  --color-input: var(--input);\n+  --color-border: var(--border);\n+  --color-destructive: var(--destructive);\n+  --color-accent-foreground: var(--accent-foreground);\n+  --color-accent: var(--accent);\n+  --color-muted-foreground: var(--muted-foreground);\n+  --color-muted: var(--muted);\n+  --color-secondary-foreground: var(--secondary-foreground);\n+  --color-secondary: var(--secondary);\n+  --color-primary-foreground: var(--primary-foreground);\n+  --color-primary: var(--primary);\n+  --color-popover-foreground: var(--popover-foreground);\n+  --color-popover: var(--popover);\n+  --color-card-foreground: var(--card-foreground);\n+  --color-card: var(--card);\n+  --radius-sm: calc(var(--radius) - 4px);\n+  --radius-md: calc(var(--radius) - 2px);\n+  --radius-lg: var(--radius);\n+  --radius-xl: calc(var(--radius) + 4px);\n+}\n+\n+:root {\n+  --radius: 0.625rem;\n+  --background: oklch(1 0 0);\n+  --foreground: oklch(0.145 0 0);\n+  --card: oklch(1 0 0);\n+  --card-foreground: oklch(0.145 0 0);\n+  --popover: oklch(1 0 0);\n+  --popover-foreground: oklch(0.145 0 0);\n+  --primary: oklch(0.205 0 0);\n+  --primary-foreground: oklch(0.985 0 0);\n+  --secondary: oklch(0.97 0 0);\n+  --secondary-foreground: oklch(0.205 0 0);\n+  --muted: oklch(0.97 0 0);\n+  --muted-foreground: oklch(0.556 0 0);\n+  --accent: oklch(0.97 0 0);\n+  --accent-foreground: oklch(0.205 0 0);\n+  --destructive: oklch(0.577 0.245 27.325);\n+  --border: oklch(0.922 0 0);\n+  --input: oklch(0.922 0 0);\n+  --ring: oklch(0.708 0 0);\n+  --chart-1: oklch(0.646 0.222 41.116);\n+  --chart-2: oklch(0.6 0.118 184.704);\n+  --chart-3: oklch(0.398 0.07 227.392);\n+  --chart-4: oklch(0.828 0.189 84.429);\n+  --chart-5: oklch(0.769 0.188 70.08);\n+  --sidebar: oklch(0.985 0 0);\n+  --sidebar-foreground: oklch(0.145 0 0);\n+  --sidebar-primary: oklch(0.205 0 0);\n+  --sidebar-primary-foreground: oklch(0.985 0 0);\n+  --sidebar-accent: oklch(0.97 0 0);\n+  --sidebar-accent-foreground: oklch(0.205 0 0);\n+  --sidebar-border: oklch(0.922 0 0);\n+  --sidebar-ring: oklch(0.708 0 0);\n+}\n+\n+.dark {\n+  --background: oklch(0.145 0 0);\n+  --foreground: oklch(0.985 0 0);\n+  --card: oklch(0.205 0 0);\n+  --card-foreground: oklch(0.985 0 0);\n+  --popover: oklch(0.205 0 0);\n+  --popover-foreground: oklch(0.985 0 0);\n+  --primary: oklch(0.922 0 0);\n+  --primary-foreground: oklch(0.205 0 0);\n+  --secondary: oklch(0.269 0 0);\n+  --secondary-foreground: oklch(0.985 0 0);\n+  --muted: oklch(0.269 0 0);\n+  --muted-foreground: oklch(0.708 0 0);\n+  --accent: oklch(0.269 0 0);\n+  --accent-foreground: oklch(0.985 0 0);\n+  --destructive: oklch(0.704 0.191 22.216);\n+  --border: oklch(1 0 0 / 10%);\n+  --input: oklch(1 0 0 / 15%);\n+  --ring: oklch(0.556 0 0);\n+  --chart-1: oklch(0.488 0.243 264.376);\n+  --chart-2: oklch(0.696 0.17 162.48);\n+  --chart-3: oklch(0.769 0.188 70.08);\n+  --chart-4: oklch(0.627 0.265 303.9);\n+  --chart-5: oklch(0.645 0.246 16.439);\n+  --sidebar: oklch(0.205 0 0);\n+  --sidebar-foreground: oklch(0.985 0 0);\n+  --sidebar-primary: oklch(0.488 0.243 264.376);\n+  --sidebar-primary-foreground: oklch(0.985 0 0);\n+  --sidebar-accent: oklch(0.269 0 0);\n+  --sidebar-accent-foreground: oklch(0.985 0 0);\n+  --sidebar-border: oklch(1 0 0 / 10%);\n+  --sidebar-ring: oklch(0.556 0 0);\n+}\n+\n+@layer base {\n+  * {\n+    @apply border-border outline-ring/50;\n+  }\n+  body {\n+    @apply bg-background text-foreground;\n+  }\n+}"
      },
      {
        "filename": "src/app/layout.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,34 @@\n+import type { Metadata } from \"next\";\n+import { Geist, Geist_Mono } from \"next/font/google\";\n+import \"./globals.css\";\n+\n+const geistSans = Geist({\n+  variable: \"--font-geist-sans\",\n+  subsets: [\"latin\"],\n+});\n+\n+const geistMono = Geist_Mono({\n+  variable: \"--font-geist-mono\",\n+  subsets: [\"latin\"],\n+});\n+\n+export const metadata: Metadata = {\n+  title: \"Create Next App\",\n+  description: \"Generated by create next app\",\n+};\n+\n+export default function RootLayout({\n+  children,\n+}: Readonly<{\n+  children: React.ReactNode;\n+}>) {\n+  return (\n+    <html lang=\"en\">\n+      <body\n+        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n+      >\n+        {children}\n+      </body>\n+    </html>\n+  );\n+}"
      },
      {
        "filename": "src/app/page.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,3 @@\n+export default function Home() {\n+  return <div>ssakssak-commit</div>;\n+}"
      },
      {
        "filename": "src/app/ui/common/badge.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,46 @@\n+import * as React from \"react\";\n+import { Slot } from \"@radix-ui/react-slot\";\n+import { cva, type VariantProps } from \"class-variance-authority\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+const badgeVariants = cva(\n+  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n+        secondary:\n+          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n+        destructive:\n+          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n+        outline:\n+          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+    },\n+  },\n+);\n+\n+function Badge({\n+  className,\n+  variant,\n+  asChild = false,\n+  ...props\n+}: React.ComponentProps<\"span\"> &\n+  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n+  const Comp = asChild ? Slot : \"span\";\n+\n+  return (\n+    <Comp\n+      data-slot=\"badge\"\n+      className={cn(badgeVariants({ variant }), className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+export { Badge, badgeVariants };"
      },
      {
        "filename": "src/app/ui/common/button.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,59 @@\n+import * as React from \"react\";\n+import { Slot } from \"@radix-ui/react-slot\";\n+import { cva, type VariantProps } from \"class-variance-authority\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n+        destructive:\n+          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n+        outline:\n+          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n+        secondary:\n+          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n+        ghost:\n+          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n+        link: \"text-primary underline-offset-4 hover:underline\",\n+      },\n+      size: {\n+        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n+        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n+        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n+        icon: \"size-9\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  },\n+);\n+\n+function Button({\n+  className,\n+  variant,\n+  size,\n+  asChild = false,\n+  ...props\n+}: React.ComponentProps<\"button\"> &\n+  VariantProps<typeof buttonVariants> & {\n+    asChild?: boolean;\n+  }) {\n+  const Comp = asChild ? Slot : \"button\";\n+\n+  return (\n+    <Comp\n+      data-slot=\"button\"\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      {...props}\n+    />\n+  );\n+}\n+\n+export { Button, buttonVariants };"
      },
      {
        "filename": "src/app/ui/common/combobox.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,91 @@\n+\"use client\";\n+\n+import * as React from \"react\";\n+\n+import { Button } from \"@/app/ui/common/button\";\n+import {\n+  Command,\n+  CommandEmpty,\n+  CommandGroup,\n+  CommandInput,\n+  CommandItem,\n+  CommandList,\n+} from \"@/app/ui/common/command\";\n+import {\n+  Popover,\n+  PopoverContent,\n+  PopoverTrigger,\n+} from \"@/app/ui/common/popover\";\n+\n+type Status = {\n+  value: string;\n+  label: string;\n+};\n+\n+const statuses: Status[] = [\n+  {\n+    value: \"backlog\",\n+    label: \"Backlog\",\n+  },\n+  {\n+    value: \"todo\",\n+    label: \"Todo\",\n+  },\n+  {\n+    value: \"in progress\",\n+    label: \"In Progress\",\n+  },\n+  {\n+    value: \"done\",\n+    label: \"Done\",\n+  },\n+  {\n+    value: \"canceled\",\n+    label: \"Canceled\",\n+  },\n+];\n+\n+export function ComboboxPopover() {\n+  const [open, setOpen] = React.useState(false);\n+  const [selectedStatus, setSelectedStatus] = React.useState<Status | null>(\n+    null,\n+  );\n+\n+  return (\n+    <div className=\"flex items-center space-x-4\">\n+      <p className=\"text-muted-foreground text-sm\">Status</p>\n+      <Popover open={open} onOpenChange={setOpen}>\n+        <PopoverTrigger asChild>\n+          <Button variant=\"outline\" className=\"w-[150px] justify-start\">\n+            {selectedStatus ? <>{selectedStatus.label}</> : <>+ Set status</>}\n+          </Button>\n+        </PopoverTrigger>\n+        <PopoverContent className=\"p-0\" side=\"right\" align=\"start\">\n+          <Command>\n+            <CommandInput placeholder=\"Change status...\" />\n+            <CommandList>\n+              <CommandEmpty>No results found.</CommandEmpty>\n+              <CommandGroup>\n+                {statuses.map((status) => (\n+                  <CommandItem\n+                    key={status.value}\n+                    value={status.value}\n+                    onSelect={(value) => {\n+                      setSelectedStatus(\n+                        statuses.find((priority) => priority.value === value) ||\n+                          null,\n+                      );\n+                      setOpen(false);\n+                    }}\n+                  >\n+                    {status.label}\n+                  </CommandItem>\n+                ))}\n+              </CommandGroup>\n+            </CommandList>\n+          </Command>\n+        </PopoverContent>\n+      </Popover>\n+    </div>\n+  );\n+}"
      },
      {
        "filename": "src/app/ui/common/command.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,184 @@\n+\"use client\";\n+\n+import * as React from \"react\";\n+import { Command as CommandPrimitive } from \"cmdk\";\n+import { SearchIcon } from \"lucide-react\";\n+\n+import { cn } from \"@/lib/utils\";\n+import {\n+  Dialog,\n+  DialogContent,\n+  DialogDescription,\n+  DialogHeader,\n+  DialogTitle,\n+} from \"@/app/ui/common/dialog\";\n+\n+function Command({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof CommandPrimitive>) {\n+  return (\n+    <CommandPrimitive\n+      data-slot=\"command\"\n+      className={cn(\n+        \"bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function CommandDialog({\n+  title = \"Command Palette\",\n+  description = \"Search for a command to run...\",\n+  children,\n+  className,\n+  showCloseButton = true,\n+  ...props\n+}: React.ComponentProps<typeof Dialog> & {\n+  title?: string;\n+  description?: string;\n+  className?: string;\n+  showCloseButton?: boolean;\n+}) {\n+  return (\n+    <Dialog {...props}>\n+      <DialogHeader className=\"sr-only\">\n+        <DialogTitle>{title}</DialogTitle>\n+        <DialogDescription>{description}</DialogDescription>\n+      </DialogHeader>\n+      <DialogContent\n+        className={cn(\"overflow-hidden p-0\", className)}\n+        showCloseButton={showCloseButton}\n+      >\n+        <Command className=\"[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n+          {children}\n+        </Command>\n+      </DialogContent>\n+    </Dialog>\n+  );\n+}\n+\n+function CommandInput({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof CommandPrimitive.Input>) {\n+  return (\n+    <div\n+      data-slot=\"command-input-wrapper\"\n+      className=\"flex h-9 items-center gap-2 border-b px-3\"\n+    >\n+      <SearchIcon className=\"size-4 shrink-0 opacity-50\" />\n+      <CommandPrimitive.Input\n+        data-slot=\"command-input\"\n+        className={cn(\n+          \"placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50\",\n+          className,\n+        )}\n+        {...props}\n+      />\n+    </div>\n+  );\n+}\n+\n+function CommandList({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof CommandPrimitive.List>) {\n+  return (\n+    <CommandPrimitive.List\n+      data-slot=\"command-list\"\n+      className={cn(\n+        \"max-h-[300px] scroll-py-1 overflow-x-hidden overflow-y-auto\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function CommandEmpty({\n+  ...props\n+}: React.ComponentProps<typeof CommandPrimitive.Empty>) {\n+  return (\n+    <CommandPrimitive.Empty\n+      data-slot=\"command-empty\"\n+      className=\"py-6 text-center text-sm\"\n+      {...props}\n+    />\n+  );\n+}\n+\n+function CommandGroup({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof CommandPrimitive.Group>) {\n+  return (\n+    <CommandPrimitive.Group\n+      data-slot=\"command-group\"\n+      className={cn(\n+        \"text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function CommandSeparator({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof CommandPrimitive.Separator>) {\n+  return (\n+    <CommandPrimitive.Separator\n+      data-slot=\"command-separator\"\n+      className={cn(\"bg-border -mx-1 h-px\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function CommandItem({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof CommandPrimitive.Item>) {\n+  return (\n+    <CommandPrimitive.Item\n+      data-slot=\"command-item\"\n+      className={cn(\n+        \"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function CommandShortcut({\n+  className,\n+  ...props\n+}: React.ComponentProps<\"span\">) {\n+  return (\n+    <span\n+      data-slot=\"command-shortcut\"\n+      className={cn(\n+        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+export {\n+  Command,\n+  CommandDialog,\n+  CommandInput,\n+  CommandList,\n+  CommandEmpty,\n+  CommandGroup,\n+  CommandItem,\n+  CommandShortcut,\n+  CommandSeparator,\n+};"
      },
      {
        "filename": "src/app/ui/common/dialog.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,143 @@\n+\"use client\";\n+\n+import * as React from \"react\";\n+import * as DialogPrimitive from \"@radix-ui/react-dialog\";\n+import { XIcon } from \"lucide-react\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+function Dialog({\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n+  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\n+}\n+\n+function DialogTrigger({\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n+  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\n+}\n+\n+function DialogPortal({\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n+  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\n+}\n+\n+function DialogClose({\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n+  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\n+}\n+\n+function DialogOverlay({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n+  return (\n+    <DialogPrimitive.Overlay\n+      data-slot=\"dialog-overlay\"\n+      className={cn(\n+        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function DialogContent({\n+  className,\n+  children,\n+  showCloseButton = true,\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n+  showCloseButton?: boolean;\n+}) {\n+  return (\n+    <DialogPortal data-slot=\"dialog-portal\">\n+      <DialogOverlay />\n+      <DialogPrimitive.Content\n+        data-slot=\"dialog-content\"\n+        className={cn(\n+          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n+          className,\n+        )}\n+        {...props}\n+      >\n+        {children}\n+        {showCloseButton && (\n+          <DialogPrimitive.Close\n+            data-slot=\"dialog-close\"\n+            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n+          >\n+            <XIcon />\n+            <span className=\"sr-only\">Close</span>\n+          </DialogPrimitive.Close>\n+        )}\n+      </DialogPrimitive.Content>\n+    </DialogPortal>\n+  );\n+}\n+\n+function DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n+  return (\n+    <div\n+      data-slot=\"dialog-header\"\n+      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n+  return (\n+    <div\n+      data-slot=\"dialog-footer\"\n+      className={cn(\n+        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function DialogTitle({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n+  return (\n+    <DialogPrimitive.Title\n+      data-slot=\"dialog-title\"\n+      className={cn(\"text-lg leading-none font-semibold\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function DialogDescription({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n+  return (\n+    <DialogPrimitive.Description\n+      data-slot=\"dialog-description\"\n+      className={cn(\"text-muted-foreground text-sm\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+export {\n+  Dialog,\n+  DialogClose,\n+  DialogContent,\n+  DialogDescription,\n+  DialogFooter,\n+  DialogHeader,\n+  DialogOverlay,\n+  DialogPortal,\n+  DialogTitle,\n+  DialogTrigger,\n+};"
      },
      {
        "filename": "src/app/ui/common/input.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,21 @@\n+import * as React from \"react\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+function Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n+  return (\n+    <input\n+      type={type}\n+      data-slot=\"input\"\n+      className={cn(\n+        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n+        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n+        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+export { Input };"
      },
      {
        "filename": "src/app/ui/common/pagination.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,127 @@\n+import * as React from \"react\";\n+import {\n+  ChevronLeftIcon,\n+  ChevronRightIcon,\n+  MoreHorizontalIcon,\n+} from \"lucide-react\";\n+\n+import { cn } from \"@/lib/utils\";\n+import { Button, buttonVariants } from \"@/app/ui/common/button\";\n+\n+function Pagination({ className, ...props }: React.ComponentProps<\"nav\">) {\n+  return (\n+    <nav\n+      role=\"navigation\"\n+      aria-label=\"pagination\"\n+      data-slot=\"pagination\"\n+      className={cn(\"mx-auto flex w-full justify-center\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function PaginationContent({\n+  className,\n+  ...props\n+}: React.ComponentProps<\"ul\">) {\n+  return (\n+    <ul\n+      data-slot=\"pagination-content\"\n+      className={cn(\"flex flex-row items-center gap-1\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function PaginationItem({ ...props }: React.ComponentProps<\"li\">) {\n+  return <li data-slot=\"pagination-item\" {...props} />;\n+}\n+\n+type PaginationLinkProps = {\n+  isActive?: boolean;\n+} & Pick<React.ComponentProps<typeof Button>, \"size\"> &\n+  React.ComponentProps<\"a\">;\n+\n+function PaginationLink({\n+  className,\n+  isActive,\n+  size = \"icon\",\n+  ...props\n+}: PaginationLinkProps) {\n+  return (\n+    <a\n+      aria-current={isActive ? \"page\" : undefined}\n+      data-slot=\"pagination-link\"\n+      data-active={isActive}\n+      className={cn(\n+        buttonVariants({\n+          variant: isActive ? \"outline\" : \"ghost\",\n+          size,\n+        }),\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function PaginationPrevious({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof PaginationLink>) {\n+  return (\n+    <PaginationLink\n+      aria-label=\"Go to previous page\"\n+      size=\"default\"\n+      className={cn(\"gap-1 px-2.5 sm:pl-2.5\", className)}\n+      {...props}\n+    >\n+      <ChevronLeftIcon />\n+      <span className=\"hidden sm:block\">Previous</span>\n+    </PaginationLink>\n+  );\n+}\n+\n+function PaginationNext({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof PaginationLink>) {\n+  return (\n+    <PaginationLink\n+      aria-label=\"Go to next page\"\n+      size=\"default\"\n+      className={cn(\"gap-1 px-2.5 sm:pr-2.5\", className)}\n+      {...props}\n+    >\n+      <span className=\"hidden sm:block\">Next</span>\n+      <ChevronRightIcon />\n+    </PaginationLink>\n+  );\n+}\n+\n+function PaginationEllipsis({\n+  className,\n+  ...props\n+}: React.ComponentProps<\"span\">) {\n+  return (\n+    <span\n+      aria-hidden\n+      data-slot=\"pagination-ellipsis\"\n+      className={cn(\"flex size-9 items-center justify-center\", className)}\n+      {...props}\n+    >\n+      <MoreHorizontalIcon className=\"size-4\" />\n+      <span className=\"sr-only\">More pages</span>\n+    </span>\n+  );\n+}\n+\n+export {\n+  Pagination,\n+  PaginationContent,\n+  PaginationLink,\n+  PaginationItem,\n+  PaginationPrevious,\n+  PaginationNext,\n+  PaginationEllipsis,\n+};"
      },
      {
        "filename": "src/app/ui/common/popover.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,48 @@\n+\"use client\";\n+\n+import * as React from \"react\";\n+import * as PopoverPrimitive from \"@radix-ui/react-popover\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+function Popover({\n+  ...props\n+}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n+  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n+}\n+\n+function PopoverTrigger({\n+  ...props\n+}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n+  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n+}\n+\n+function PopoverContent({\n+  className,\n+  align = \"center\",\n+  sideOffset = 4,\n+  ...props\n+}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n+  return (\n+    <PopoverPrimitive.Portal>\n+      <PopoverPrimitive.Content\n+        data-slot=\"popover-content\"\n+        align={align}\n+        sideOffset={sideOffset}\n+        className={cn(\n+          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n+          className,\n+        )}\n+        {...props}\n+      />\n+    </PopoverPrimitive.Portal>\n+  );\n+}\n+\n+function PopoverAnchor({\n+  ...props\n+}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n+  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\n+}\n+\n+export { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };"
      },
      {
        "filename": "src/app/ui/common/select.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,185 @@\n+\"use client\";\n+\n+import * as React from \"react\";\n+import * as SelectPrimitive from \"@radix-ui/react-select\";\n+import { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+function Select({\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n+  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\n+}\n+\n+function SelectGroup({\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n+  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\n+}\n+\n+function SelectValue({\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n+  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\n+}\n+\n+function SelectTrigger({\n+  className,\n+  size = \"default\",\n+  children,\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n+  size?: \"sm\" | \"default\";\n+}) {\n+  return (\n+    <SelectPrimitive.Trigger\n+      data-slot=\"select-trigger\"\n+      data-size={size}\n+      className={cn(\n+        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n+        className,\n+      )}\n+      {...props}\n+    >\n+      {children}\n+      <SelectPrimitive.Icon asChild>\n+        <ChevronDownIcon className=\"size-4 opacity-50\" />\n+      </SelectPrimitive.Icon>\n+    </SelectPrimitive.Trigger>\n+  );\n+}\n+\n+function SelectContent({\n+  className,\n+  children,\n+  position = \"popper\",\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n+  return (\n+    <SelectPrimitive.Portal>\n+      <SelectPrimitive.Content\n+        data-slot=\"select-content\"\n+        className={cn(\n+          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n+          position === \"popper\" &&\n+            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n+          className,\n+        )}\n+        position={position}\n+        {...props}\n+      >\n+        <SelectScrollUpButton />\n+        <SelectPrimitive.Viewport\n+          className={cn(\n+            \"p-1\",\n+            position === \"popper\" &&\n+              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\",\n+          )}\n+        >\n+          {children}\n+        </SelectPrimitive.Viewport>\n+        <SelectScrollDownButton />\n+      </SelectPrimitive.Content>\n+    </SelectPrimitive.Portal>\n+  );\n+}\n+\n+function SelectLabel({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n+  return (\n+    <SelectPrimitive.Label\n+      data-slot=\"select-label\"\n+      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function SelectItem({\n+  className,\n+  children,\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n+  return (\n+    <SelectPrimitive.Item\n+      data-slot=\"select-item\"\n+      className={cn(\n+        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n+        className,\n+      )}\n+      {...props}\n+    >\n+      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n+        <SelectPrimitive.ItemIndicator>\n+          <CheckIcon className=\"size-4\" />\n+        </SelectPrimitive.ItemIndicator>\n+      </span>\n+      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n+    </SelectPrimitive.Item>\n+  );\n+}\n+\n+function SelectSeparator({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n+  return (\n+    <SelectPrimitive.Separator\n+      data-slot=\"select-separator\"\n+      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function SelectScrollUpButton({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n+  return (\n+    <SelectPrimitive.ScrollUpButton\n+      data-slot=\"select-scroll-up-button\"\n+      className={cn(\n+        \"flex cursor-default items-center justify-center py-1\",\n+        className,\n+      )}\n+      {...props}\n+    >\n+      <ChevronUpIcon className=\"size-4\" />\n+    </SelectPrimitive.ScrollUpButton>\n+  );\n+}\n+\n+function SelectScrollDownButton({\n+  className,\n+  ...props\n+}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n+  return (\n+    <SelectPrimitive.ScrollDownButton\n+      data-slot=\"select-scroll-down-button\"\n+      className={cn(\n+        \"flex cursor-default items-center justify-center py-1\",\n+        className,\n+      )}\n+      {...props}\n+    >\n+      <ChevronDownIcon className=\"size-4\" />\n+    </SelectPrimitive.ScrollDownButton>\n+  );\n+}\n+\n+export {\n+  Select,\n+  SelectContent,\n+  SelectGroup,\n+  SelectItem,\n+  SelectLabel,\n+  SelectScrollDownButton,\n+  SelectScrollUpButton,\n+  SelectSeparator,\n+  SelectTrigger,\n+  SelectValue,\n+};"
      },
      {
        "filename": "src/app/ui/common/table.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,116 @@\n+\"use client\";\n+\n+import * as React from \"react\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+function Table({ className, ...props }: React.ComponentProps<\"table\">) {\n+  return (\n+    <div\n+      data-slot=\"table-container\"\n+      className=\"relative w-full overflow-x-auto\"\n+    >\n+      <table\n+        data-slot=\"table\"\n+        className={cn(\"w-full caption-bottom text-sm\", className)}\n+        {...props}\n+      />\n+    </div>\n+  );\n+}\n+\n+function TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n+  return (\n+    <thead\n+      data-slot=\"table-header\"\n+      className={cn(\"[&_tr]:border-b\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n+  return (\n+    <tbody\n+      data-slot=\"table-body\"\n+      className={cn(\"[&_tr:last-child]:border-0\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n+  return (\n+    <tfoot\n+      data-slot=\"table-footer\"\n+      className={cn(\n+        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n+  return (\n+    <tr\n+      data-slot=\"table-row\"\n+      className={cn(\n+        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n+  return (\n+    <th\n+      data-slot=\"table-head\"\n+      className={cn(\n+        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n+  return (\n+    <td\n+      data-slot=\"table-cell\"\n+      className={cn(\n+        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+function TableCaption({\n+  className,\n+  ...props\n+}: React.ComponentProps<\"caption\">) {\n+  return (\n+    <caption\n+      data-slot=\"table-caption\"\n+      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n+      {...props}\n+    />\n+  );\n+}\n+\n+export {\n+  Table,\n+  TableHeader,\n+  TableBody,\n+  TableFooter,\n+  TableHead,\n+  TableRow,\n+  TableCell,\n+  TableCaption,\n+};"
      },
      {
        "filename": "src/app/ui/common/textarea.tsx",
        "status": "added",
        "patch": "@@ -0,0 +1,18 @@\n+import * as React from \"react\";\n+\n+import { cn } from \"@/lib/utils\";\n+\n+function Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n+  return (\n+    <textarea\n+      data-slot=\"textarea\"\n+      className={cn(\n+        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n+        className,\n+      )}\n+      {...props}\n+    />\n+  );\n+}\n+\n+export { Textarea };"
      },
      {
        "filename": "src/lib/logger.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,12 @@\n+import pino from \"pino\";\n+\n+export const logger = pino({\n+  transport:\n+    process.env.NODE_ENV === \"development\"\n+      ? {\n+          target: \"pino-pretty\",\n+          options: { colorize: true },\n+        }\n+      : undefined,\n+  level: process.env.LOG_LEVEL || \"info\",\n+});"
      },
      {
        "filename": "src/lib/utils.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,6 @@\n+import { clsx, type ClassValue } from \"clsx\";\n+import { twMerge } from \"tailwind-merge\";\n+\n+export function cn(...inputs: ClassValue[]) {\n+  return twMerge(clsx(inputs));\n+}"
      },
      {
        "filename": "src/stores/useStore.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,5 @@\n+import { create } from \"zustand\";\n+\n+const useStore = create(() => {});\n+\n+export default useStore;"
      },
      {
        "filename": "tsconfig.json",
        "status": "added",
        "patch": "@@ -0,0 +1,27 @@\n+{\n+  \"compilerOptions\": {\n+    \"target\": \"ES2017\",\n+    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n+    \"allowJs\": true,\n+    \"skipLibCheck\": true,\n+    \"strict\": true,\n+    \"noEmit\": true,\n+    \"esModuleInterop\": true,\n+    \"module\": \"esnext\",\n+    \"moduleResolution\": \"bundler\",\n+    \"resolveJsonModule\": true,\n+    \"isolatedModules\": true,\n+    \"jsx\": \"preserve\",\n+    \"incremental\": true,\n+    \"plugins\": [\n+      {\n+        \"name\": \"next\"\n+      }\n+    ],\n+    \"paths\": {\n+      \"@/*\": [\"./src/*\"]\n+    }\n+  },\n+  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n+  \"exclude\": [\"node_modules\"]\n+}"
      }
    ]
  },
  {
    "sha": "0df09c2a4a789022901452dea85a0f9131f5274a",
    "author": "codewith-MJ",
    "date": "2025-08-28T11:22:00Z",
    "message": "✨feat: repository url 입력시 git에서 branch 목록 조회해오도록 기능 추가",
    "files": [
      {
        "filename": "src/app/api/branch/route.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,22 @@\n+import { getRepositoryBranchNames } from \"@/services/branch/branch\";\n+import { NextRequest, NextResponse } from \"next/server\";\n+\n+const handleGetBranchNames = async function GET(request: NextRequest) {\n+  const repositoryUrl = request.nextUrl.searchParams.get(\"repositoryUrl\");\n+\n+  if (repositoryUrl === null) {\n+    return;\n+  }\n+\n+  try {\n+    const branches = await getRepositoryBranchNames(repositoryUrl);\n+\n+    return NextResponse.json({ branches });\n+  } catch (error) {\n+    const message = error instanceof Error ? error.message : \"Unexpected error\";\n+\n+    return new Response(message, { status: 500 });\n+  }\n+};\n+\n+export { handleGetBranchNames as GET };"
      },
      {
        "filename": "src/app/types/branch.ts",
        "status": "added",
        "patch": "@@ -0,0 +1 @@\n+export type BranchName = string;"
      },
      {
        "filename": "src/infra/github-api/github.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,19 @@\n+import { Octokit } from \"octokit\";\n+import { BranchName } from \"@/app/types/branch\";\n+\n+const getBranchNames = async (owner: string, repositoryName: string) => {\n+  const octokit = new Octokit();\n+  const response = await octokit.request(\"GET /repos/{owner}/{repo}/branches\", {\n+    owner: owner,\n+    repo: repositoryName,\n+    headers: {\n+      \"X-Github-Api-Version\": \"2022-11-28\",\n+    },\n+  });\n+\n+  const branchNames: BranchName[] = response.data.map((branch) => branch.name);\n+\n+  return branchNames;\n+};\n+\n+export { getBranchNames };"
      },
      {
        "filename": "src/lib/parse-repository-url.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,15 @@\n+const parseRepositoryUrl = (\n+  repositoryUrl: string,\n+): { owner: string; repositoryName: string } => {\n+  const [owner, repositoryName] = repositoryUrl\n+    .replace(\"https://github.com/\", \"\")\n+    .replace(\".git\", \"\")\n+    .split(\"/\");\n+\n+  return {\n+    owner,\n+    repositoryName,\n+  };\n+};\n+\n+export default parseRepositoryUrl;"
      },
      {
        "filename": "src/services/branch/branch.ts",
        "status": "added",
        "patch": "@@ -0,0 +1,11 @@\n+import { getBranchNames } from \"@/infra/github-api/github\";\n+import parseRepositoryUrl from \"@/lib/parse-repository-url\";\n+\n+const getRepositoryBranchNames = async (repositoryUrl: string) => {\n+  const { owner, repositoryName } = parseRepositoryUrl(repositoryUrl);\n+  const branchNames = await getBranchNames(owner, repositoryName);\n+\n+  return branchNames;\n+};\n+\n+export { getRepositoryBranchNames };"
      }
    ]
  },
  {
    "sha": "e679952ed4c0046280cbd1286e8c689083a70129",
    "author": "codewith-MJ",
    "date": "2025-08-29T05:54:05Z",
    "message": "📦️chore: octokit RequestError package.json에 추가",
    "files": []
  }
]
